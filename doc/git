git cherry-pick commitid(单独合并某次commit)


git merge branch 合并分支
    如果合并有冲突，手动解决完冲突之后，再add、commit

1. git fetch
2. git rebase (rebase有冲突:手动解决冲突后,add,git rebase --continue)

#git常用撤销操作 git rm –cached application.log// 撤销跟踪某个文件(添加忽略文件)
https://www.shiyanlou.com/questions/4693

#git pull 冲突（mearging）
git reset --hard HEAD 撤销合并；


#创建并切换到新分支(即使在当前分支做的修改未提交，也能将改变的内容带到新分支)
git checkout -b branchname(分支名)

#提交本地分支到远程仓库并关联
git push -u origin branchname // 提交本地分支作为远程的master分支
 1. 本地新建分支未作修改
    可以直接执行 'git push -u origin branchname' ，然后以后正常add、commit、push即可
 2. 本地新建分支已修改
    add、commit之后，首次push的时候执行 'git push -u origin branchname' ，以后正常push即可


# git stash 用法(如果执行"git stash pop"后，代码冲突，手动修改冲突，然后add即可)
git stash: 将当前的工作区内容保存到Git栈中。
git stash pop: 从Git栈中读取最近一次保存的内容
git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。
git stash clear: 清空Git栈

# git reset --hard HASH 回退到某个提交分节点

